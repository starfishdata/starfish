name: Publish to Test PyPI

on:
  push:
    tags:
      - 'test-v*'
    branches:
      - 'dev'

jobs:
  deploy_testpypi:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Required for full commit history check
    - name: Verify tag is on dev branch
      run: |
        TAG_NAME=${GITHUB_REF#refs/tags/}
        COMMIT=$(git rev-parse $TAG_NAME)
        if ! git branch --contains $COMMIT | grep -qw dev; then
          echo "::error::Tag $TAG_NAME must be created from dev branch"
          exit 1
        fi
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    - name: Build and publish
      env:
        #TWINE_USERNAME: ${{ secrets.TEST_PYPI_USERNAME }}
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
        #ACTIONS_STEP_DEBUG: true
      run: |
        # echo "TWINE_PASSWORD first 5 chars: ${TWINE_PASSWORD:0:184}"
        # echo "TWINE_PASSWORD length: ${#TWINE_PASSWORD}"
        python -m build
        twine upload --verbose --repository-url https://test.pypi.org/legacy/ dist/*

  test-colab:
    #needs: deploy_testpypi
    runs-on: ubuntu-latest
    #a Public “Colab-like” Image
    container:
      image: jupyter/minimal-notebook:latest   # from Docker Hub
      options: --user 1001:1001
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      # Authenticate to GCP
      # - name: Authenticate to GCP
      #   uses: google-github-actions/auth@v1
      #   with:
      #     credentials_json: ${{ secrets.GCP_SA_KEY }}

      # # Configure Docker to use GCR credentials
      # - name: Configure Docker for GCR
      #   uses: google-github-actions/docker-auth@v1

      # # Now you can pull the image
      # - name: Use Colab base image
      #   run: docker pull gcr.io/colab-images/base:latest
      - name: Install starfish-core and dependencies
        run: |
          pip install --upgrade pip
          pip install --index-url https://test.pypi.org/simple/ \
                   --extra-index-url https://pypi.org/simple \
                    "cryptography!=40.0.0,!=40.0.1,<42,>=38.0.0" \
                   starfish-core
          pip install pytest nbval

      - name: Run Colab-style tests
        run: |
          python -m pytest --nbval \
            --nbval-kernel-name=python3 \
            --nbval-cell-timeout=120 \
            --nbval-sanitize-with ./tests/sanitize.cfg \
            tests/data_factory/factory/test_resume_index.ipynb

      # Add tag deletion step
      - name: Delete triggering tag after successful test
        if: success() && startsWith(github.ref, 'refs/tags/test-v')
        run: |
          gh api -X DELETE /repos/$GITHUB_REPOSITORY/git/refs/tags/${GITHUB_REF#refs/tags/}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
