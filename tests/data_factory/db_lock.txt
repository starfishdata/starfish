
Run poetry run pytest --cov='src' --cov-fail-under=20  tests/
/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/pytest_asyncio/plugin.py:208: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"
  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts ==============================
platform linux -- Python 3.11.12, pytest-8.3.5, pluggy-1.5.0
rootdir: /home/runner/work/starfish/starfish
configfile: pytest.ini
plugins: dependency-0.6.0, cov-6.1.1, anyio-4.9.0, asyncio-0.24.0, timeout-2.3.1
asyncio: mode=Mode.AUTO, default_loop_scope=None
timeout: 180.0s
timeout method: thread
timeout func_only: False
collected 131 items
tests/data_factory/factory/test_output_index.py .                        [  0%]
tests/data_factory/factory/test_resume.py .....                          [  4%]
tests/data_factory/factory/test_run.py F.FFF..F.FFF                      [ 13%]
tests/data_factory/storage/local/test_local_storage.py ..........        [ 21%]
tests/data_factory/storage/local/test_performance.py ....                [ 24%]
tests/data_factory/storage/test_storage_main.py .                        [ 25%]
tests/data_template/test_data_template.py ..F.F.                         [ 29%]
tests/llm/parser/test_json_parser.py .....................               [ 45%]
tests/llm/parser/test_pydantic_parser.py ................                [ 58%]
tests/llm/prompt/test_prompt.py ..................                       [ 71%]
tests/llm/prompt/test_prompt_loader.py ................................. [ 96%]
....                                                                     [100%]
=================================== FAILURES ===================================
_________________________________ test_case_1 __________________________________
    @pytest.mark.asyncio
    async def test_case_1():
        """Test with input data and broadcast variables
        - Input: List of dicts with city names
        - Broadcast: num_records_per_city
        - Expected: All cities processed successfully
        """
    
        @data_factory(max_concurrency=2)
        async def test1(city_name, num_records_per_city, fail_rate=0.1, sleep_time=1):
            return await mock_llm_call(city_name, num_records_per_city, fail_rate=fail_rate, sleep_time=sleep_time)
    
>       result = test1.run(
            data=[
                {"city_name": "1. New York"},
                {"city_name": "2. Los Angeles"},
                {"city_name": "3. Chicago"},
                {"city_name": "4. Houston"},
                {"city_name": "5. Miami"},
            ],
            num_records_per_city=5,
        )
tests/data_factory/factory/test_run.py:28: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
src/starfish/data_factory/factory.py:85: in run
    return event_loop_manager(self.factory, *args, **kwargs)
src/starfish/data_factory/factory.py:869: in event_loop_manager
    result = loop.run_until_complete(callable_func(*args, **kwargs))
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/nest_asyncio.py:98: in run_until_complete
    return f.result()
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py:203: in result
    raise self._exception.with_traceback(self._exception_tb)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/tasks.py:277: in __step
    result = coro.send(None)
src/starfish/data_factory/factory.py:266: in __call__
    return await self._finalize_and_cleanup_job()
src/starfish/data_factory/factory.py:334: in _finalize_and_cleanup_job
    result = await self._finalize_job()
src/starfish/data_factory/factory.py:328: in _finalize_job
    await self._complete_master_job()
src/starfish/data_factory/factory.py:558: in _complete_master_job
    raise e
src/starfish/data_factory/factory.py:556: in _complete_master_job
    await self.factory_storage.log_master_job_end(self.config.master_job_id, status, summary, now, now)
src/starfish/data_factory/storage/local/local_storage.py:102: in log_master_job_end
    await self._metadata_handler.log_master_job_end_impl(master_job_id, final_status, summary, end_time, update_time)
src/starfish/data_factory/storage/local/metadata_handler.py:261: in log_master_job_end_impl
    await self._execute_sql(sql, params)
src/starfish/data_factory/storage/local/metadata_handler.py:117: in _execute_sql
    raise e
src/starfish/data_factory/storage/local/metadata_handler.py:108: in _execute_sql
    async with conn.execute(sql, params) as _:
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/context.py:41: in __aenter__
    self._obj = await self._coro
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py:183: in execute
    cursor = await self._execute(self._conn.execute, sql, parameters)
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py:122: in _execute
    return await future
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py:287: in __await__
    yield self  # This tells Task to wait for completion.
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/tasks.py:349: in __wakeup
    future.result()
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py:203: in result
    raise self._exception.with_traceback(self._exception_tb)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
self = <Connection(Thread-24, started 140574370305728)>
    def run(self) -> None:
        """
        Execute function calls on a separate thread.
    
        :meta private:
        """
        while True:
            # Continues running until all queue items are processed,
            # even after connection is closed (so we can finalize all
            # futures)
    
            tx_item = self._tx.get()
            if tx_item is _STOP_RUNNING_SENTINEL:
                break
    
            future, function = tx_item
    
            try:
                LOG.debug("executing %s", function)
>               result = function()
E               sqlite3.OperationalError: database is locked
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py:105: OperationalError
------------------------------ Captured log call -------------------------------
ERROR    starfish.data_factory.storage.local.metadata_handler:metadata_handler.py:116 SQL write execution failed: 
            INSERT OR REPLACE INTO Projects (proj... Error: database is locked
Traceback (most recent call last):
  File "/home/runner/work/starfish/starfish/src/starfish/data_factory/storage/local/metadata_handler.py", line 108, in _execute_sql
    async with conn.execute(sql, params) as _:
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/context.py", line 41, in __aenter__
    self._obj = await self._coro
                ^^^^^^^^^^^^^^^^
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 183, in execute
    cursor = await self._execute(self._conn.execute, sql, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 122, in _execute
    return await future
           ^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py", line 287, in __await__
    yield self  # This tells Task to wait for completion.
    ^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/tasks.py", line 349, in __wakeup
    future.result()
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py", line 203, in result
    raise self._exception.with_traceback(self._exception_tb)
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 105, in run
    result = function()
             ^^^^^^^^^^
sqlite3.OperationalError: database is locked
ERROR    starfish.data_factory.storage.local.metadata_handler:metadata_handler.py:116 SQL write execution failed: 
            UPDATE GenerationMasterJob
          ... Error: database is locked
Traceback (most recent call last):
  File "/home/runner/work/starfish/starfish/src/starfish/data_factory/storage/local/metadata_handler.py", line 108, in _execute_sql
    async with conn.execute(sql, params) as _:
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/context.py", line 41, in __aenter__
    self._obj = await self._coro
                ^^^^^^^^^^^^^^^^
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 183, in execute
    cursor = await self._execute(self._conn.execute, sql, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 122, in _execute
    return await future
           ^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py", line 287, in __await__
    yield self  # This tells Task to wait for completion.
    ^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/tasks.py", line 349, in __wakeup
    future.result()
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py", line 203, in result
    raise self._exception.with_traceback(self._exception_tb)
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 105, in run
    result = function()
             ^^^^^^^^^^
sqlite3.OperationalError: database is locked
_________________________________ test_case_3 __________________________________
    @pytest.mark.asyncio
    async def test_case_3():
        """Test failure handling with 100% failure rate
        - Input: List of dicts with city names
        - Parameters: fail_rate=1 (100% failure)
        - Expected: Exception due to all requests failing
        """
    
        @data_factory(max_concurrency=2)
        async def test1(city_name, num_records_per_city, fail_rate=1, sleep_time=0.05):
            return await mock_llm_call(city_name, num_records_per_city, fail_rate=fail_rate, sleep_time=sleep_time)
    
        with pytest.raises(OutputError):
>           test1.run(
                data=[
                    {"city_name": "1. New York"},
                    {"city_name": "2. Los Angeles"},
                    {"city_name": "3. Chicago"},
                    {"city_name": "4. Houston"},
                    {"city_name": "5. Miami"},
                ],
                num_records_per_city=5,
            )
tests/data_factory/factory/test_run.py:73: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
src/starfish/data_factory/factory.py:85: in run
    return event_loop_manager(self.factory, *args, **kwargs)
src/starfish/data_factory/factory.py:869: in event_loop_manager
    result = loop.run_until_complete(callable_func(*args, **kwargs))
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/nest_asyncio.py:98: in run_until_complete
    return f.result()
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py:203: in result
    raise self._exception.with_traceback(self._exception_tb)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/tasks.py:277: in __step
    result = coro.send(None)
src/starfish/data_factory/factory.py:266: in __call__
    return await self._finalize_and_cleanup_job()
src/starfish/data_factory/factory.py:334: in _finalize_and_cleanup_job
    result = await self._finalize_job()
src/starfish/data_factory/factory.py:328: in _finalize_job
    await self._complete_master_job()
src/starfish/data_factory/factory.py:558: in _complete_master_job
    raise e
src/starfish/data_factory/factory.py:556: in _complete_master_job
    await self.factory_storage.log_master_job_end(self.config.master_job_id, status, summary, now, now)
src/starfish/data_factory/storage/local/local_storage.py:102: in log_master_job_end
    await self._metadata_handler.log_master_job_end_impl(master_job_id, final_status, summary, end_time, update_time)
src/starfish/data_factory/storage/local/metadata_handler.py:261: in log_master_job_end_impl
    await self._execute_sql(sql, params)
src/starfish/data_factory/storage/local/metadata_handler.py:117: in _execute_sql
    raise e
src/starfish/data_factory/storage/local/metadata_handler.py:108: in _execute_sql
    async with conn.execute(sql, params) as _:
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/context.py:41: in __aenter__
    self._obj = await self._coro
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py:183: in execute
    cursor = await self._execute(self._conn.execute, sql, parameters)
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py:122: in _execute
    return await future
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py:287: in __await__
    yield self  # This tells Task to wait for completion.
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/tasks.py:349: in __wakeup
    future.result()
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py:203: in result
    raise self._exception.with_traceback(self._exception_tb)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
self = <Connection(Thread-27, started 140574403868352)>
    def run(self) -> None:
        """
        Execute function calls on a separate thread.
    
        :meta private:
        """
        while True:
            # Continues running until all queue items are processed,
            # even after connection is closed (so we can finalize all
            # futures)
    
            tx_item = self._tx.get()
            if tx_item is _STOP_RUNNING_SENTINEL:
                break
    
            future, function = tx_item
    
            try:
                LOG.debug("executing %s", function)
>               result = function()
E               sqlite3.OperationalError: database is locked
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py:105: OperationalError
------------------------------ Captured log call -------------------------------
ERROR    starfish.data_factory.storage.local.metadata_handler:metadata_handler.py:116 SQL write execution failed: 
            INSERT OR REPLACE INTO Projects (proj... Error: database is locked
Traceback (most recent call last):
  File "/home/runner/work/starfish/starfish/src/starfish/data_factory/storage/local/metadata_handler.py", line 108, in _execute_sql
    async with conn.execute(sql, params) as _:
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/context.py", line 41, in __aenter__
    self._obj = await self._coro
                ^^^^^^^^^^^^^^^^
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 183, in execute
    cursor = await self._execute(self._conn.execute, sql, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 122, in _execute
    return await future
           ^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py", line 287, in __await__
    yield self  # This tells Task to wait for completion.
    ^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/tasks.py", line 349, in __wakeup
    future.result()
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py", line 203, in result
    raise self._exception.with_traceback(self._exception_tb)
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 105, in run
    result = function()
             ^^^^^^^^^^
sqlite3.OperationalError: database is locked
ERROR    starfish.data_factory.storage.local.metadata_handler:metadata_handler.py:116 SQL write execution failed: 
            UPDATE GenerationMasterJob
          ... Error: database is locked
Traceback (most recent call last):
  File "/home/runner/work/starfish/starfish/src/starfish/data_factory/storage/local/metadata_handler.py", line 108, in _execute_sql
    async with conn.execute(sql, params) as _:
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/context.py", line 41, in __aenter__
    self._obj = await self._coro
                ^^^^^^^^^^^^^^^^
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 183, in execute
    cursor = await self._execute(self._conn.execute, sql, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 122, in _execute
    return await future
           ^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py", line 287, in __await__
    yield self  # This tells Task to wait for completion.
    ^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/tasks.py", line 349, in __wakeup
    future.result()
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py", line 203, in result
    raise self._exception.with_traceback(self._exception_tb)
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 105, in run
    result = function()
             ^^^^^^^^^^
sqlite3.OperationalError: database is locked
_________________________________ test_case_4 __________________________________
    @pytest.mark.asyncio
    async def test_case_4():
        """Test if broadcast variables can override kwargs with a single value"""
    
        @data_factory(max_concurrency=2)
        async def test_func(city_name, num_records_per_city, fail_rate=0.1, sleep_time=0.05):
            return await mock_llm_call(city_name, num_records_per_city, fail_rate=fail_rate, sleep_time=sleep_time)
    
>       result = test_func.run(data=[{"city_name": "1. New York"}, {"city_name": "2. Los Angeles"}], city_name="override_city_name", num_records_per_city=1)
tests/data_factory/factory/test_run.py:93: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
src/starfish/data_factory/factory.py:85: in run
    return event_loop_manager(self.factory, *args, **kwargs)
src/starfish/data_factory/factory.py:869: in event_loop_manager
    result = loop.run_until_complete(callable_func(*args, **kwargs))
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/nest_asyncio.py:98: in run_until_complete
    return f.result()
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py:203: in result
    raise self._exception.with_traceback(self._exception_tb)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/tasks.py:277: in __step
    result = coro.send(None)
src/starfish/data_factory/factory.py:266: in __call__
    return await self._finalize_and_cleanup_job()
src/starfish/data_factory/factory.py:334: in _finalize_and_cleanup_job
    result = await self._finalize_job()
src/starfish/data_factory/factory.py:328: in _finalize_job
    await self._complete_master_job()
src/starfish/data_factory/factory.py:558: in _complete_master_job
    raise e
src/starfish/data_factory/factory.py:556: in _complete_master_job
    await self.factory_storage.log_master_job_end(self.config.master_job_id, status, summary, now, now)
src/starfish/data_factory/storage/local/local_storage.py:102: in log_master_job_end
    await self._metadata_handler.log_master_job_end_impl(master_job_id, final_status, summary, end_time, update_time)
src/starfish/data_factory/storage/local/metadata_handler.py:261: in log_master_job_end_impl
    await self._execute_sql(sql, params)
src/starfish/data_factory/storage/local/metadata_handler.py:117: in _execute_sql
    raise e
src/starfish/data_factory/storage/local/metadata_handler.py:108: in _execute_sql
    async with conn.execute(sql, params) as _:
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/context.py:41: in __aenter__
    self._obj = await self._coro
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py:183: in execute
    cursor = await self._execute(self._conn.execute, sql, parameters)
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py:122: in _execute
    return await future
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py:287: in __await__
    yield self  # This tells Task to wait for completion.
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/tasks.py:349: in __wakeup
    future.result()
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py:203: in result
    raise self._exception.with_traceback(self._exception_tb)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
self = <Connection(Thread-29, started 140574387087040)>
    def run(self) -> None:
        """
        Execute function calls on a separate thread.
    
        :meta private:
        """
        while True:
            # Continues running until all queue items are processed,
            # even after connection is closed (so we can finalize all
            # futures)
    
            tx_item = self._tx.get()
            if tx_item is _STOP_RUNNING_SENTINEL:
                break
    
            future, function = tx_item
    
            try:
                LOG.debug("executing %s", function)
>               result = function()
E               sqlite3.OperationalError: database is locked
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py:105: OperationalError
------------------------------ Captured log call -------------------------------
ERROR    starfish.data_factory.storage.local.metadata_handler:metadata_handler.py:116 SQL write execution failed: 
            INSERT OR REPLACE INTO Projects (proj... Error: database is locked
Traceback (most recent call last):
  File "/home/runner/work/starfish/starfish/src/starfish/data_factory/storage/local/metadata_handler.py", line 108, in _execute_sql
    async with conn.execute(sql, params) as _:
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/context.py", line 41, in __aenter__
    self._obj = await self._coro
                ^^^^^^^^^^^^^^^^
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 183, in execute
    cursor = await self._execute(self._conn.execute, sql, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 122, in _execute
    return await future
           ^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py", line 287, in __await__
    yield self  # This tells Task to wait for completion.
    ^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/tasks.py", line 349, in __wakeup
    future.result()
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py", line 203, in result
    raise self._exception.with_traceback(self._exception_tb)
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 105, in run
    result = function()
             ^^^^^^^^^^
sqlite3.OperationalError: database is locked
ERROR    starfish.data_factory.storage.local.metadata_handler:metadata_handler.py:116 SQL write execution failed: 
            UPDATE GenerationMasterJob
          ... Error: database is locked
Traceback (most recent call last):
  File "/home/runner/work/starfish/starfish/src/starfish/data_factory/storage/local/metadata_handler.py", line 108, in _execute_sql
    async with conn.execute(sql, params) as _:
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/context.py", line 41, in __aenter__
    self._obj = await self._coro
                ^^^^^^^^^^^^^^^^
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 183, in execute
    cursor = await self._execute(self._conn.execute, sql, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 122, in _execute
    return await future
           ^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py", line 287, in __await__
    yield self  # This tells Task to wait for completion.
    ^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/tasks.py", line 349, in __wakeup
    future.result()
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py", line 203, in result
    raise self._exception.with_traceback(self._exception_tb)
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 105, in run
    result = function()
             ^^^^^^^^^^
sqlite3.OperationalError: database is locked
_________________________________ test_case_5 __________________________________
    @pytest.mark.asyncio
    async def test_case_5():
        """Test if broadcast variables can override kwargs with a list of values"""
    
        @data_factory(max_concurrency=2)
        async def test_func(city_name, num_records_per_city, fail_rate=0.1, sleep_time=0.05):
            return await mock_llm_call(city_name, num_records_per_city, fail_rate=fail_rate, sleep_time=sleep_time)
    
>       result = test_func.run(
            data=[{"city_name": "1. New York"}, {"city_name": "2. Los Angeles"}],
            city_name=["1. override_city_name", "2. override_city_name"],
            num_records_per_city=1,
        )
tests/data_factory/factory/test_run.py:108: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
src/starfish/data_factory/factory.py:85: in run
    return event_loop_manager(self.factory, *args, **kwargs)
src/starfish/data_factory/factory.py:869: in event_loop_manager
    result = loop.run_until_complete(callable_func(*args, **kwargs))
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/nest_asyncio.py:98: in run_until_complete
    return f.result()
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py:203: in result
    raise self._exception.with_traceback(self._exception_tb)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/tasks.py:277: in __step
    result = coro.send(None)
src/starfish/data_factory/factory.py:266: in __call__
    return await self._finalize_and_cleanup_job()
src/starfish/data_factory/factory.py:334: in _finalize_and_cleanup_job
    result = await self._finalize_job()
src/starfish/data_factory/factory.py:328: in _finalize_job
    await self._complete_master_job()
src/starfish/data_factory/factory.py:558: in _complete_master_job
    raise e
src/starfish/data_factory/factory.py:556: in _complete_master_job
    await self.factory_storage.log_master_job_end(self.config.master_job_id, status, summary, now, now)
src/starfish/data_factory/storage/local/local_storage.py:102: in log_master_job_end
    await self._metadata_handler.log_master_job_end_impl(master_job_id, final_status, summary, end_time, update_time)
src/starfish/data_factory/storage/local/metadata_handler.py:261: in log_master_job_end_impl
    await self._execute_sql(sql, params)
src/starfish/data_factory/storage/local/metadata_handler.py:117: in _execute_sql
    raise e
src/starfish/data_factory/storage/local/metadata_handler.py:108: in _execute_sql
    async with conn.execute(sql, params) as _:
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/context.py:41: in __aenter__
    self._obj = await self._coro
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py:183: in execute
    cursor = await self._execute(self._conn.execute, sql, parameters)
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py:122: in _execute
    return await future
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py:287: in __await__
    yield self  # This tells Task to wait for completion.
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/tasks.py:349: in __wakeup
    future.result()
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py:203: in result
    raise self._exception.with_traceback(self._exception_tb)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
self = <Connection(Thread-31, started 140574141183680)>
    def run(self) -> None:
        """
        Execute function calls on a separate thread.
    
        :meta private:
        """
        while True:
            # Continues running until all queue items are processed,
            # even after connection is closed (so we can finalize all
            # futures)
    
            tx_item = self._tx.get()
            if tx_item is _STOP_RUNNING_SENTINEL:
                break
    
            future, function = tx_item
    
            try:
                LOG.debug("executing %s", function)
>               result = function()
E               sqlite3.OperationalError: database is locked
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py:105: OperationalError
------------------------------ Captured log call -------------------------------
ERROR    starfish.data_factory.storage.local.metadata_handler:metadata_handler.py:116 SQL write execution failed: 
            INSERT OR REPLACE INTO Projects (proj... Error: database is locked
Traceback (most recent call last):
  File "/home/runner/work/starfish/starfish/src/starfish/data_factory/storage/local/metadata_handler.py", line 108, in _execute_sql
    async with conn.execute(sql, params) as _:
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/context.py", line 41, in __aenter__
    self._obj = await self._coro
                ^^^^^^^^^^^^^^^^
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 183, in execute
    cursor = await self._execute(self._conn.execute, sql, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 122, in _execute
    return await future
           ^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py", line 287, in __await__
    yield self  # This tells Task to wait for completion.
    ^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/tasks.py", line 349, in __wakeup
    future.result()
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py", line 203, in result
    raise self._exception.with_traceback(self._exception_tb)
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 105, in run
    result = function()
             ^^^^^^^^^^
sqlite3.OperationalError: database is locked
ERROR    starfish.data_factory.storage.local.metadata_handler:metadata_handler.py:116 SQL write execution failed: 
            UPDATE GenerationMasterJob
          ... Error: database is locked
Traceback (most recent call last):
  File "/home/runner/work/starfish/starfish/src/starfish/data_factory/storage/local/metadata_handler.py", line 108, in _execute_sql
    async with conn.execute(sql, params) as _:
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/context.py", line 41, in __aenter__
    self._obj = await self._coro
                ^^^^^^^^^^^^^^^^
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 183, in execute
    cursor = await self._execute(self._conn.execute, sql, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 122, in _execute
    return await future
           ^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py", line 287, in __await__
    yield self  # This tells Task to wait for completion.
    ^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/tasks.py", line 349, in __wakeup
    future.result()
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py", line 203, in result
    raise self._exception.with_traceback(self._exception_tb)
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 105, in run
    result = function()
             ^^^^^^^^^^
sqlite3.OperationalError: database is locked
_________________________________ test_case_8 __________________________________
    @pytest.mark.asyncio
    async def test_case_8():
        """Test hooks that change state of workflow
        - Input: List of dicts with city names
        - Hook: test_hook modifies state
        - Expected: State variable should be modified by hook
        """
    
        def test_hook(data, state):
            state.update({"variable": f"changed_state - {data}"})
            return STATUS_COMPLETED
    
        @data_factory(max_concurrency=2, on_record_complete=[test_hook], initial_state_values={"variable": "initial_state"})
        async def test1(city_name, num_records_per_city, fail_rate=0.1, sleep_time=0.05):
            return await mock_llm_call(city_name, num_records_per_city, fail_rate=fail_rate, sleep_time=sleep_time)
    
>       test1.run(
            data=[
                {"city_name": "1. New York"},
                {"city_name": "2. Los Angeles"},
            ],
            num_records_per_city=1,
        )
tests/data_factory/factory/test_run.py:179: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
src/starfish/data_factory/factory.py:85: in run
    return event_loop_manager(self.factory, *args, **kwargs)
src/starfish/data_factory/factory.py:869: in event_loop_manager
    result = loop.run_until_complete(callable_func(*args, **kwargs))
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/nest_asyncio.py:98: in run_until_complete
    return f.result()
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py:203: in result
    raise self._exception.with_traceback(self._exception_tb)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/tasks.py:277: in __step
    result = coro.send(None)
src/starfish/data_factory/factory.py:266: in __call__
    return await self._finalize_and_cleanup_job()
src/starfish/data_factory/factory.py:334: in _finalize_and_cleanup_job
    result = await self._finalize_job()
src/starfish/data_factory/factory.py:328: in _finalize_job
    await self._complete_master_job()
src/starfish/data_factory/factory.py:558: in _complete_master_job
    raise e
src/starfish/data_factory/factory.py:556: in _complete_master_job
    await self.factory_storage.log_master_job_end(self.config.master_job_id, status, summary, now, now)
src/starfish/data_factory/storage/local/local_storage.py:102: in log_master_job_end
    await self._metadata_handler.log_master_job_end_impl(master_job_id, final_status, summary, end_time, update_time)
src/starfish/data_factory/storage/local/metadata_handler.py:261: in log_master_job_end_impl
    await self._execute_sql(sql, params)
src/starfish/data_factory/storage/local/metadata_handler.py:117: in _execute_sql
    raise e
src/starfish/data_factory/storage/local/metadata_handler.py:108: in _execute_sql
    async with conn.execute(sql, params) as _:
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/context.py:41: in __aenter__
    self._obj = await self._coro
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py:183: in execute
    cursor = await self._execute(self._conn.execute, sql, parameters)
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py:122: in _execute
    return await future
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py:287: in __await__
    yield self  # This tells Task to wait for completion.
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/tasks.py:349: in __wakeup
    future.result()
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py:203: in result
    raise self._exception.with_traceback(self._exception_tb)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
self = <Connection(Thread-35, started 140573876942528)>
    def run(self) -> None:
        """
        Execute function calls on a separate thread.
    
        :meta private:
        """
        while True:
            # Continues running until all queue items are processed,
            # even after connection is closed (so we can finalize all
            # futures)
    
            tx_item = self._tx.get()
            if tx_item is _STOP_RUNNING_SENTINEL:
                break
    
            future, function = tx_item
    
            try:
                LOG.debug("executing %s", function)
>               result = function()
E               sqlite3.OperationalError: database is locked
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py:105: OperationalError
------------------------------ Captured log call -------------------------------
ERROR    starfish.data_factory.storage.local.metadata_handler:metadata_handler.py:116 SQL write execution failed: 
            INSERT OR REPLACE INTO Projects (proj... Error: database is locked
Traceback (most recent call last):
  File "/home/runner/work/starfish/starfish/src/starfish/data_factory/storage/local/metadata_handler.py", line 108, in _execute_sql
    async with conn.execute(sql, params) as _:
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/context.py", line 41, in __aenter__
    self._obj = await self._coro
                ^^^^^^^^^^^^^^^^
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 183, in execute
    cursor = await self._execute(self._conn.execute, sql, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 122, in _execute
    return await future
           ^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py", line 287, in __await__
    yield self  # This tells Task to wait for completion.
    ^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/tasks.py", line 349, in __wakeup
    future.result()
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py", line 203, in result
    raise self._exception.with_traceback(self._exception_tb)
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 105, in run
    result = function()
             ^^^^^^^^^^
sqlite3.OperationalError: database is locked
ERROR    starfish.data_factory.storage.local.metadata_handler:metadata_handler.py:116 SQL write execution failed: 
            UPDATE GenerationMasterJob
          ... Error: database is locked
Traceback (most recent call last):
  File "/home/runner/work/starfish/starfish/src/starfish/data_factory/storage/local/metadata_handler.py", line 108, in _execute_sql
    async with conn.execute(sql, params) as _:
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/context.py", line 41, in __aenter__
    self._obj = await self._coro
                ^^^^^^^^^^^^^^^^
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 183, in execute
    cursor = await self._execute(self._conn.execute, sql, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 122, in _execute
    return await future
           ^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py", line 287, in __await__
    yield self  # This tells Task to wait for completion.
    ^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/tasks.py", line 349, in __wakeup
    future.result()
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py", line 203, in result
    raise self._exception.with_traceback(self._exception_tb)
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 105, in run
    result = function()
             ^^^^^^^^^^
sqlite3.OperationalError: database is locked
______________________________ test_case_timeout _______________________________
    @pytest.mark.asyncio
    async def test_case_timeout():
        """Test extra parameters not defined in workflow
        - Input: List of dicts with city names
        - Extra: random_param not defined in workflow
        - Expected: TypeError due to unexpected parameter
        """
    
        @data_factory(max_concurrency=2, task_runner_timeout=0.01)
        async def test1(city_name, num_records_per_city, fail_rate=0.1, sleep_time=0.05):
            return await mock_llm_call(city_name, num_records_per_city, fail_rate=fail_rate, sleep_time=sleep_time)
    
        with pytest.raises(OutputError):
>           test1.run(
                data=[
                    {"city_name": "1. New York"},
                    {"city_name": "2. Los Angeles"},
                ],
                num_records_per_city=1,
            )
tests/data_factory/factory/test_run.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
src/starfish/data_factory/factory.py:85: in run
    return event_loop_manager(self.factory, *args, **kwargs)
src/starfish/data_factory/factory.py:869: in event_loop_manager
    result = loop.run_until_complete(callable_func(*args, **kwargs))
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/nest_asyncio.py:98: in run_until_complete
    return f.result()
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py:203: in result
    raise self._exception.with_traceback(self._exception_tb)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/tasks.py:277: in __step
    result = coro.send(None)
src/starfish/data_factory/factory.py:266: in __call__
    return await self._finalize_and_cleanup_job()
src/starfish/data_factory/factory.py:334: in _finalize_and_cleanup_job
    result = await self._finalize_job()
src/starfish/data_factory/factory.py:328: in _finalize_job
    await self._complete_master_job()
src/starfish/data_factory/factory.py:558: in _complete_master_job
    raise e
src/starfish/data_factory/factory.py:556: in _complete_master_job
    await self.factory_storage.log_master_job_end(self.config.master_job_id, status, summary, now, now)
src/starfish/data_factory/storage/local/local_storage.py:102: in log_master_job_end
    await self._metadata_handler.log_master_job_end_impl(master_job_id, final_status, summary, end_time, update_time)
src/starfish/data_factory/storage/local/metadata_handler.py:261: in log_master_job_end_impl
    await self._execute_sql(sql, params)
src/starfish/data_factory/storage/local/metadata_handler.py:117: in _execute_sql
    raise e
src/starfish/data_factory/storage/local/metadata_handler.py:108: in _execute_sql
    async with conn.execute(sql, params) as _:
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/context.py:41: in __aenter__
    self._obj = await self._coro
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py:183: in execute
    cursor = await self._execute(self._conn.execute, sql, parameters)
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py:122: in _execute
    return await future
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py:287: in __await__
    yield self  # This tells Task to wait for completion.
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/tasks.py:349: in __wakeup
    future.result()
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py:203: in result
    raise self._exception.with_traceback(self._exception_tb)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
self = <Connection(Thread-39, started 140573608507072)>
    def run(self) -> None:
        """
        Execute function calls on a separate thread.
    
        :meta private:
        """
        while True:
            # Continues running until all queue items are processed,
            # even after connection is closed (so we can finalize all
            # futures)
    
            tx_item = self._tx.get()
            if tx_item is _STOP_RUNNING_SENTINEL:
                break
    
            future, function = tx_item
    
            try:
                LOG.debug("executing %s", function)
>               result = function()
E               sqlite3.OperationalError: database is locked
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py:105: OperationalError
------------------------------ Captured log call -------------------------------
ERROR    starfish.data_factory.storage.local.metadata_handler:metadata_handler.py:116 SQL write execution failed: 
            INSERT OR REPLACE INTO Projects (proj... Error: database is locked
Traceback (most recent call last):
  File "/home/runner/work/starfish/starfish/src/starfish/data_factory/storage/local/metadata_handler.py", line 108, in _execute_sql
    async with conn.execute(sql, params) as _:
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/context.py", line 41, in __aenter__
    self._obj = await self._coro
                ^^^^^^^^^^^^^^^^
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 183, in execute
    cursor = await self._execute(self._conn.execute, sql, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 122, in _execute
    return await future
           ^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py", line 287, in __await__
    yield self  # This tells Task to wait for completion.
    ^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/tasks.py", line 349, in __wakeup
    future.result()
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py", line 203, in result
    raise self._exception.with_traceback(self._exception_tb)
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 105, in run
    result = function()
             ^^^^^^^^^^
sqlite3.OperationalError: database is locked
ERROR    starfish.data_factory.storage.local.metadata_handler:metadata_handler.py:116 SQL write execution failed: 
            UPDATE GenerationMasterJob
          ... Error: database is locked
Traceback (most recent call last):
  File "/home/runner/work/starfish/starfish/src/starfish/data_factory/storage/local/metadata_handler.py", line 108, in _execute_sql
    async with conn.execute(sql, params) as _:
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/context.py", line 41, in __aenter__
    self._obj = await self._coro
                ^^^^^^^^^^^^^^^^
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 183, in execute
    cursor = await self._execute(self._conn.execute, sql, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 122, in _execute
    return await future
           ^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py", line 287, in __await__
    yield self  # This tells Task to wait for completion.
    ^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/tasks.py", line 349, in __wakeup
    future.result()
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py", line 203, in result
    raise self._exception.with_traceback(self._exception_tb)
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 105, in run
    result = function()
             ^^^^^^^^^^
sqlite3.OperationalError: database is locked
_______________________ test_case_job_run_stop_threshold _______________________
    @pytest.mark.asyncio
    async def test_case_job_run_stop_threshold():
        """Test extra parameters not defined in workflow
        - Input: List of dicts with city names
        - Extra: random_param not defined in workflow
        - Expected: TypeError due to unexpected parameter
        """
    
        @data_factory(max_concurrency=2, job_run_stop_threshold=2)
        async def test1(city_name, num_records_per_city, fail_rate=0.1, sleep_time=0.05):
            return await mock_llm_call(city_name, num_records_per_city, fail_rate=fail_rate, sleep_time=sleep_time)
    
>       test1.run(
            data=[
                {"city_name": "1. New York"},
                {"city_name": "2. Los Angeles"},
            ],
            num_records_per_city=1,
        )
tests/data_factory/factory/test_run.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
src/starfish/data_factory/factory.py:85: in run
    return event_loop_manager(self.factory, *args, **kwargs)
src/starfish/data_factory/factory.py:869: in event_loop_manager
    result = loop.run_until_complete(callable_func(*args, **kwargs))
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/nest_asyncio.py:98: in run_until_complete
    return f.result()
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py:203: in result
    raise self._exception.with_traceback(self._exception_tb)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/tasks.py:277: in __step
    result = coro.send(None)
src/starfish/data_factory/factory.py:266: in __call__
    return await self._finalize_and_cleanup_job()
src/starfish/data_factory/factory.py:334: in _finalize_and_cleanup_job
    result = await self._finalize_job()
src/starfish/data_factory/factory.py:328: in _finalize_job
    await self._complete_master_job()
src/starfish/data_factory/factory.py:558: in _complete_master_job
    raise e
src/starfish/data_factory/factory.py:556: in _complete_master_job
    await self.factory_storage.log_master_job_end(self.config.master_job_id, status, summary, now, now)
src/starfish/data_factory/storage/local/local_storage.py:102: in log_master_job_end
    await self._metadata_handler.log_master_job_end_impl(master_job_id, final_status, summary, end_time, update_time)
src/starfish/data_factory/storage/local/metadata_handler.py:261: in log_master_job_end_impl
    await self._execute_sql(sql, params)
src/starfish/data_factory/storage/local/metadata_handler.py:117: in _execute_sql
    raise e
src/starfish/data_factory/storage/local/metadata_handler.py:108: in _execute_sql
    async with conn.execute(sql, params) as _:
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/context.py:41: in __aenter__
    self._obj = await self._coro
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py:183: in execute
    cursor = await self._execute(self._conn.execute, sql, parameters)
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py:122: in _execute
    return await future
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py:287: in __await__
    yield self  # This tells Task to wait for completion.
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/tasks.py:349: in __wakeup
    future.result()
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py:203: in result
    raise self._exception.with_traceback(self._exception_tb)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
self = <Connection(Thread-41, started 140573843379904)>
    def run(self) -> None:
        """
        Execute function calls on a separate thread.
    
        :meta private:
        """
        while True:
            # Continues running until all queue items are processed,
            # even after connection is closed (so we can finalize all
            # futures)
    
            tx_item = self._tx.get()
            if tx_item is _STOP_RUNNING_SENTINEL:
                break
    
            future, function = tx_item
    
            try:
                LOG.debug("executing %s", function)
>               result = function()
E               sqlite3.OperationalError: database is locked
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py:105: OperationalError
------------------------------ Captured log call -------------------------------
ERROR    starfish.data_factory.storage.local.metadata_handler:metadata_handler.py:116 SQL write execution failed: 
            INSERT OR REPLACE INTO Projects (proj... Error: database is locked
Traceback (most recent call last):
  File "/home/runner/work/starfish/starfish/src/starfish/data_factory/storage/local/metadata_handler.py", line 108, in _execute_sql
    async with conn.execute(sql, params) as _:
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/context.py", line 41, in __aenter__
    self._obj = await self._coro
                ^^^^^^^^^^^^^^^^
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 183, in execute
    cursor = await self._execute(self._conn.execute, sql, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 122, in _execute
    return await future
           ^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py", line 287, in __await__
    yield self  # This tells Task to wait for completion.
    ^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/tasks.py", line 349, in __wakeup
    future.result()
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py", line 203, in result
    raise self._exception.with_traceback(self._exception_tb)
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 105, in run
    result = function()
             ^^^^^^^^^^
sqlite3.OperationalError: database is locked
ERROR    starfish.data_factory.storage.local.metadata_handler:metadata_handler.py:116 SQL write execution failed: 
            UPDATE GenerationMasterJob
          ... Error: database is locked
Traceback (most recent call last):
  File "/home/runner/work/starfish/starfish/src/starfish/data_factory/storage/local/metadata_handler.py", line 108, in _execute_sql
    async with conn.execute(sql, params) as _:
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/context.py", line 41, in __aenter__
    self._obj = await self._coro
                ^^^^^^^^^^^^^^^^
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 183, in execute
    cursor = await self._execute(self._conn.execute, sql, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 122, in _execute
    return await future
           ^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py", line 287, in __await__
    yield self  # This tells Task to wait for completion.
    ^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/tasks.py", line 349, in __wakeup
    future.result()
  File "/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py", line 203, in result
    raise self._exception.with_traceback(self._exception_tb)
  File "/home/runner/.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py", line 105, in run
    result = function()
             ^^^^^^^^^^
sqlite3.OperationalError: database is locked
____________________ test_case_reuse_run_different_factory _____________________
    @pytest.mark.asyncio
    async def test_case_reuse_run_different_factory():
        @data_factory(max_concurrency=10)
        async def input_format_mock_llm(city_name: str, num_records_per_city: int):
            return await mock_llm_call(city_name=city_name, num_records_per_city=num_records_per_city, fail_rate=0.01)
    
        @data_factory(max_concurrency=10)
        async def input_format_mock_llm_1(city_name: str, num_records_per_city: int):
            return await mock_llm_call(city_name=city_name, num_records_per_city=num_records_per_city, fail_rate=0.01)
    
        @data_factory(max_concurrency=10)
        async def input_format_mock_llm_2(city_name: str, num_records_per_city: int):
            return await mock_llm_call(city_name=city_name, num_records_per_city=num_records_per_city, fail_rate=0.01)
    
>       result = input_format_mock_llm.run(city_name=["SF", "Shanghai"], num_records_per_city=2)
tests/data_factory/factory/test_run.py:264: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
src/starfish/data_factory/factory.py:85: in run
    return event_loop_manager(self.factory, *args, **kwargs)
src/starfish/data_factory/factory.py:869: in event_loop_manager
    result = loop.run_until_complete(callable_func(*args, **kwargs))
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/nest_asyncio.py:98: in run_until_complete
    return f.result()
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py:203: in result
    raise self._exception.with_traceback(self._exception_tb)
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/tasks.py:277: in __step
    result = coro.send(None)
src/starfish/data_factory/factory.py:266: in __call__
    return await self._finalize_and_cleanup_job()
src/starfish/data_factory/factory.py:334: in _finalize_and_cleanup_job
    result = await self._finalize_job()
src/starfish/data_factory/factory.py:328: in _finalize_job
    await self._complete_master_job()
src/starfish/data_factory/factory.py:558: in _complete_master_job
    raise e
src/starfish/data_factory/factory.py:556: in _complete_master_job
    await self.factory_storage.log_master_job_end(self.config.master_job_id, status, summary, now, now)
src/starfish/data_factory/storage/local/local_storage.py:102: in log_master_job_end
    await self._metadata_handler.log_master_job_end_impl(master_job_id, final_status, summary, end_time, update_time)
src/starfish/data_factory/storage/local/metadata_handler.py:261: in log_master_job_end_impl
    await self._execute_sql(sql, params)
src/starfish/data_factory/storage/local/metadata_handler.py:117: in _execute_sql
    raise e
src/starfish/data_factory/storage/local/metadata_handler.py:108: in _execute_sql
    async with conn.execute(sql, params) as _:
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/context.py:41: in __aenter__
    self._obj = await self._coro
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py:183: in execute
    cursor = await self._execute(self._conn.execute, sql, parameters)
../../../.cache/pypoetry/virtualenvs/starfish-core-E_GeJ0w2-py3.11/lib/python3.11/site-packages/aiosqlite/core.py:122: in _execute
    return await future
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py:287: in __await__
    yield self  # This tells Task to wait for completion.
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/tasks.py:349: in __wakeup
    future.result()
/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/asyncio/futures.py:203: in result
    raise self._exception.with_traceback(self._exception_tb)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
self = <Connection(Thread-43, started 140573860161216)>
fix data_factory resume multiple time idx messed up · starfishdata/starfish@ab90446